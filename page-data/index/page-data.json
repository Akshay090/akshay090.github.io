{"componentChunkName":"component---src-pages-index-mdx","path":"/","result":{"data":{"mdx":{"id":"d9c0280e-5809-5f80-8bb6-4b00b87ccbca","body":"function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"navigationLabel\": \"home\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Alert = makeShortcode(\"Alert\");\nvar Divider = makeShortcode(\"Divider\");\nvar Button = makeShortcode(\"Button\");\nvar Link = makeShortcode(\"Link\");\nvar Flex = makeShortcode(\"Flex\");\nvar Box = makeShortcode(\"Box\");\nvar Text = makeShortcode(\"Text\");\nvar SourceTags = makeShortcode(\"SourceTags\");\nvar Badge = makeShortcode(\"Badge\");\nvar SourceList = makeShortcode(\"SourceList\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Alert, {\n    variant: \"success\",\n    mdxType: \"Alert\"\n  }, \"I'm currently looking for new opportunities \\uD83D\\uDE0A\"), mdx(Divider, {\n    mdxType: \"Divider\"\n  }), mdx(\"h1\", null, mdx(\"a\", _extends({\n    parentName: \"h1\"\n  }, {\n    \"href\": \"#akshay-ashok\"\n  }), \"akshay-ashok\")), mdx(\"p\", null, \"Full Stack Developer based in India\"), mdx(\"p\", null, \"Microsoft Learn Student Ambassador, React, NodeJS, Express, MongoDB, PostgreSQL, Python, Django, Apollo/GraphQL.\"), mdx(Button, {\n    as: \"a\",\n    variant: \"success\",\n    href: \"/resume\",\n    sx: {\n      mr: 2\n    },\n    mdxType: \"Button\"\n  }, \"View CV/Resume\"), mdx(Link, {\n    href: \"/akshay-cv.pdf\",\n    target: \"_blank\",\n    title: \"View CV\",\n    mdxType: \"Link\"\n  }, \".pdf version\"), mdx(Divider, {\n    mdxType: \"Divider\"\n  }), mdx(Divider, {\n    mdxType: \"Divider\"\n  }), mdx(\"h2\", null, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#intro\"\n  }), \"intro\")), mdx(\"p\", null, \"hey there! \\uD83D\\uDC4B I'm Akshay, a self-taught full stack developer based in India. I like to build and develop\\ncool products. I mainly work with ReactJS for frontend and NodeJS or Python depending on the task.\"), mdx(Divider, {\n    mdxType: \"Divider\"\n  }), mdx(Flex, {\n    sx: {\n      flexWrap: 'wrap'\n    },\n    mdxType: \"Flex\"\n  }, mdx(Box, {\n    sx: {\n      width: [\"100%\", \"100%\", \"55%\"],\n      mb: 3,\n      pr: [0, 0, 4]\n    },\n    mdxType: \"Box\"\n  }, mdx(\"h2\", null, \"contact\"), mdx(Text, {\n    mdxType: \"Text\"\n  }, \"Email\"), mdx(Link, {\n    href: \"mailto:howdy.aks@gmail.com\",\n    target: \"_blank\",\n    variant: \"styles.a\",\n    mdxType: \"Link\"\n  }, \"howdy.aks@gmail.com\"), mdx(Divider, {\n    mdxType: \"Divider\"\n  }), mdx(Text, {\n    mdxType: \"Text\"\n  }, \"Twitter\"), mdx(Link, {\n    href: \"https://twitter.com/aks2899\",\n    target: \"_blank\",\n    variant: \"styles.a\",\n    mdxType: \"Link\"\n  }, \"https://twitter.com/aks2899\"), mdx(Divider, {\n    mdxType: \"Divider\"\n  }), mdx(Text, {\n    mdxType: \"Text\"\n  }, \"GitHub\"), mdx(Link, {\n    href: \"https://github.com/Akshay090\",\n    target: \"_blank\",\n    variant: \"styles.a\",\n    mdxType: \"Link\"\n  }, \"https://github.com/Akshay090\"), mdx(Divider, {\n    mdxType: \"Divider\"\n  }), mdx(Divider, {\n    mdxType: \"Divider\"\n  })), mdx(Box, {\n    sx: {\n      width: [\"100%\", \"100%\", \"45%\"],\n      mb: 3\n    },\n    mdxType: \"Box\"\n  }, mdx(\"h2\", null, \"blog topics\"), mdx(Divider, {\n    mdxType: \"Divider\"\n  }), mdx(SourceTags, {\n    mdxType: \"SourceTags\"\n  }, function (tags) {\n    return mdx(Box, {\n      mdxType: \"Box\"\n    }, tags.sort(function (a, b) {\n      return b.percent - a.percent;\n    }).map(function (tag, index) {\n      var name = tag.name,\n          count = tag.count,\n          percent = tag.percent;\n      return mdx(Badge, {\n        key: index,\n        variant: \"primary\",\n        sx: {\n          mr: 2,\n          mb: 2,\n          color: mix(\"secondary\", \"primary\", \"\".concat(index / tags.length)),\n          borderColor: mix(\"secondary\", \"primary\", \"\".concat(index / tags.length))\n        },\n        mdxType: \"Badge\"\n      }, name);\n    }));\n  }), mdx(Divider, {\n    mdxType: \"Divider\"\n  }), mdx(Divider, {\n    mdxType: \"Divider\"\n  }))), mdx(\"h2\", null, \"projects\"), mdx(SourceList, {\n    filter: \"projects\",\n    mdxType: \"SourceList\"\n  }, function (projects) {\n    return mdx(Flex, {\n      sx: {\n        flexWrap: \"wrap\",\n        ml: function ml(theme) {\n          return \"-\".concat(theme.space[2], \"px\");\n        },\n        mr: function mr(theme) {\n          return \"-\".concat(theme.space[2], \"px\");\n        }\n      },\n      mdxType: \"Flex\"\n    }, projects.splice(0, 6).map(function (edge, index) {\n      var _edge$node = edge.node,\n          _edge$node$frontmatte = _edge$node.frontmatter,\n          title = _edge$node$frontmatte.title,\n          misc = _edge$node$frontmatte.misc,\n          date = _edge$node$frontmatte.date,\n          featuredImageUrl = _edge$node$frontmatte.featuredImageUrl,\n          slug = _edge$node.fields.slug;\n      return mdx(ProjectCard, {\n        key: index,\n        index: index,\n        cardImage: featuredImageUrl,\n        title: title,\n        misc: misc,\n        date: date,\n        slug: slug,\n        mdxType: \"ProjectCard\"\n      });\n    }));\n  }), mdx(Divider, {\n    mdxType: \"Divider\"\n  }), mdx(Flex, {\n    sx: {\n      justifyContent: \"center\"\n    },\n    mdxType: \"Flex\"\n  }, mdx(Box, {\n    mdxType: \"Box\"\n  }, mdx(Button, {\n    as: GatsbyLink,\n    variant: \"ghost\",\n    href: \"/projects\",\n    mdxType: \"Button\"\n  }, \"All Projects\", \" \", mdx(Box, {\n    as: \"span\",\n    role: \"img\",\n    \"aria-label\": \"pencil\",\n    mdxType: \"Box\"\n  }, \"\\uD83D\\uDEE0\")))), mdx(Divider, {\n    mdxType: \"Divider\"\n  }), mdx(\"h2\", null, \"latest posts\"), mdx(Divider, {\n    mdxType: \"Divider\"\n  }), mdx(SourceList, {\n    filter: \"posts\",\n    mdxType: \"SourceList\"\n  }, function (posts) {\n    return mdx(Flex, {\n      sx: {\n        flexWrap: \"wrap\",\n        ml: function ml(theme) {\n          return \"-\".concat(theme.space[2], \"px\");\n        },\n        mr: function mr(theme) {\n          return \"-\".concat(theme.space[2], \"px\");\n        }\n      },\n      mdxType: \"Flex\"\n    }, posts.filter(function (edge) {\n      return !edge.node.frontmatter.isPrivate;\n    }).reduce(function (posts, post) {\n      return post.node.frontmatter.pinned ? [post].concat(_toConsumableArray(posts)) : [].concat(_toConsumableArray(posts), [post]);\n    }, []).splice(0, 4).map(function (edge, index) {\n      var _edge$node2 = edge.node,\n          _edge$node2$frontmatt = _edge$node2.frontmatter,\n          title = _edge$node2$frontmatt.title,\n          featuredImageUrl = _edge$node2$frontmatt.featuredImageUrl,\n          tags = _edge$node2$frontmatt.tags,\n          date = _edge$node2$frontmatt.date,\n          dateModified = _edge$node2$frontmatt.dateModified,\n          pinned = _edge$node2$frontmatt.pinned,\n          excerpt = _edge$node2.excerpt,\n          timeToRead = _edge$node2.timeToRead,\n          slug = _edge$node2.fields.slug;\n      return mdx(PostCard, {\n        key: index,\n        title: title,\n        cardImage: index === 0 ? featuredImageUrl : null,\n        tags: tags,\n        date: date,\n        dateModified: dateModified,\n        excerpt: excerpt,\n        slug: slug,\n        pinned: pinned,\n        timeToRead: timeToRead,\n        mdxType: \"PostCard\"\n      });\n    }));\n  }), mdx(Divider, {\n    mdxType: \"Divider\"\n  }), mdx(Flex, {\n    sx: {\n      justifyContent: \"center\"\n    },\n    mdxType: \"Flex\"\n  }, mdx(Box, {\n    mdxType: \"Box\"\n  }, mdx(Button, {\n    as: GatsbyLink,\n    variant: \"ghost\",\n    href: \"/posts\",\n    mdxType: \"Button\"\n  }, \"More posts\", \" \", mdx(Box, {\n    as: \"span\",\n    role: \"img\",\n    \"aria-label\": \"pencil\",\n    mdxType: \"Box\"\n  }, \"\\u270F\\uFE0F\")))));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"akshay-ashok Full Stack Developer based in India Microsoft Learn Student Ambassador, React, NodeJS, Express, MongoDB, PostgreSQL, Python…","timeToRead":1,"wordCount":{"words":62},"frontmatter":{"title":"","tags":null,"date":null,"dateModified":null,"author":null,"status":null,"isPrivate":null,"url":null,"misc":null,"pinned":null,"featuredImage":null,"featuredImageUrl":null,"embeddedImages":null,"embeddedImageUrls":null},"fields":{"slug":"/","owner":"source","parent":""}}},"pageContext":{"id":"d9c0280e-5809-5f80-8bb6-4b00b87ccbca","prev":{"frontmatter":{"title":"","status":null},"fields":{"slug":"/projects/"}},"next":{"frontmatter":{"title":"","status":null},"fields":{"slug":"/about/"}},"parent":""}},"staticQueryHashes":["1095393795","1402550803","1469902088"]}