{"componentChunkName":"component---node-modules-pauliescanlon-gatsby-theme-terminal-src-layouts-source-layout-js","path":"/posts/formiqr-part3-counter-cloud-function/","result":{"data":{"mdx":{"id":"85e96545-1fe6-576d-b665-c8bb09b68923","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"A cloud function to implement a counter\",\n  \"tags\": [\"email\", \"Firebase\", \"cloud functions\"],\n  \"date\": \"2019-04-22T00:00:00.000Z\",\n  \"author\": \"Akshay Ashok\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"To add the counter we need to append the following code in the index.js, which we created in Part-2 post, please refer it before proceeding.\"), mdx(\"p\", null, \"Code to implement the counter is as follows :\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"exports.genderCountFxn = functions.database\\n  .ref(\\\"/atEvent/{date}/{id}\\\")\\n  .onCreate((snapshot, context) => {\\n    // Grab the current value of what was written to the Realtime Database.\\n    const Visitor = snapshot.val();\\n    console.log(\\\"Inside Visitor Fxn\\\");\\n    console.log(Visitor);\\n\\n    console.log(Visitor.name);\\n\\n    //---------------------------------------------------\\n    //Working gender counter\\n    const genderCountersRef = admin.database().ref(`count/${Visitor.gender}`);\\n\\n    return genderCountersRef.transaction((counter_value) => {\\n      return (counter_value || 0) + 1;\\n    });\\n  });\\n//To deploy firebase deploy --only functions:genderCountFxn\\n\\nexports.overallCountFxn = functions.database\\n  .ref(\\\"/atEvent/{date}/{id}\\\")\\n  .onCreate((snapshot, context) => {\\n    const Visitor = snapshot.val();\\n\\n    const overallCountersRef = admin.database().ref(`count/overAllTotal`);\\n\\n    return overallCountersRef.transaction((counter_value) => {\\n      return (counter_value || 0) + 1;\\n    });\\n  });\\n//To deploy firebase deploy --only functions:overallCountFxn\\n\")), mdx(\"p\", null, \"We would be creating the atEvent node in the next blog, where it would be generated when we scan the QR with the android app.\"), mdx(\"p\", null, \"To understand the path and the code above, have a look at the Realtime database.\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://res.cloudinary.com/akshay090/image/upload/v1597569044/Portfolio_Assets/firebase2_f36m2o.png\",\n    \"alt\": null\n  }))), mdx(\"p\", null, \"Understanding how to get this done took an effort, so if you don't get it they feel free to ask me in comments. This code is just of few lines, but it did it job perfectly to give me a bad time \\uD83D\\uDE30\"), mdx(\"p\", null, \"No lets us move to the next and the last part of this series \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/posts/formiqr-part4-appQR-to-firebase\"\n  }), \"here\"), \" to see how to implement the app to view firebase data and scan qr.\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"To add the counter we need to append the following code in the index.js, which we created in Part-2 post, please refer it before proceedingâ€¦","timeToRead":1,"wordCount":{"words":144},"frontmatter":{"title":"A cloud function to implement a counter","tags":["email","Firebase","cloud functions"],"date":"2019-04-22T00:00:00.000Z","dateModified":null,"author":"Akshay Ashok","status":null,"isPrivate":null,"url":null,"misc":null,"pinned":null,"featuredImage":null,"featuredImageUrl":null,"embeddedImages":null,"embeddedImageUrls":null},"fields":{"slug":"/posts/formiqr-part3-counter-cloud-function/","owner":"source","parent":"posts"}}},"pageContext":{"id":"85e96545-1fe6-576d-b665-c8bb09b68923","prev":{"frontmatter":{"title":"How to build formiQR - Event management with Google Forms and Cloud Function","status":null},"fields":{"slug":"/posts/formiqr/"}},"next":{"frontmatter":{"title":"Sending personalized email with dynamic QR from cloud function","status":null},"fields":{"slug":"/posts/formiqr-part2-email-cloud-function/"}},"parent":"posts"}},"staticQueryHashes":["1095393795","1402550803","1469902088"]}