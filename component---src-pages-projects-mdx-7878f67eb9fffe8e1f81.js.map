{"version":3,"sources":["webpack:///./src/pages/projects.mdx","webpack:///./node_modules/@pauliescanlon/gatsby-theme-terminal/src/layouts/PageLayout.js"],"names":["_frontmatter","makeShortcode","name","props","console","warn","SourceList","Flex","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","filter","projects","sx","flexWrap","ml","theme","space","mr","map","edge","index","node","frontmatter","title","misc","date","featuredImageUrl","slug","fields","cardImage","isMDXComponent","PageLayout","children","useConfig","site","siteMetadata","description","keywords","siteUrl","siteImage","lang","pathname","location","titleTemplate","replace","type","image","path"],"mappings":"wPAOaA,EAAe,GAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,2EAC5B,oBAASC,KAGZG,EAAaL,EAAc,cAC3BM,EAAON,EAAc,QACrBO,EAAc,CAClBR,gBAEIS,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGT,EACF,8BACD,OAAO,cAACM,EAAD,iBAAeD,EAAiBL,EAAhC,CAAuCS,WAAYA,EAAYC,QAAQ,cAI5E,oCACA,mDACA,cAACP,EAAD,CAAYQ,OAAO,WAAWD,QAAQ,eACvC,SAAAE,GAAQ,OAAI,cAACR,EAAD,CAAMS,GAAI,CACjBC,SAAU,OACVC,GAAI,SAAAC,GAAK,UAAQA,EAAMC,MAAM,GAApB,MACTC,GAAI,SAAAF,GAAK,UAAQA,EAAMC,MAAM,GAApB,OACRP,QAAQ,QACVE,EAASO,KAAI,SAACC,EAAMC,GAAU,MAWvBD,EAAKE,KAXkB,IAEzBC,YACEC,EAHuB,EAGvBA,MACAC,EAJuB,EAIvBA,KACAC,EALuB,EAKvBA,KACAC,EANuB,EAMvBA,iBAGAC,EATuB,EAQzBC,OACED,KAGJ,OAAO,cAAC,IAAD,CAAaP,MAAOA,EAAOS,UAAWH,EAAkBH,MAAOA,EAAOC,KAAMA,EAAMC,KAAMA,EAAME,KAAMA,EAAMlB,QAAQ,wBAQnIF,EAAWuB,gBAAiB,G,kCCxD5B,wFAgDeC,IArCI,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAK/BC,cAHFC,KACEC,aAAgBrC,EAHe,EAGfA,KAAMsC,EAHS,EAGTA,YAAaC,EAHJ,EAGIA,SAAUC,EAHd,EAGcA,QAASC,EAHvB,EAGuBA,UAAWC,EAHlC,EAGkCA,KAIrE,OACE,YAAC,IAAD,KACE,YAAC,IAAD,KACE,YAAC,WAAD,MACG,YAAmB,IACVC,EADS,EAAfC,SACMD,SACFE,EAAgBF,EAASG,QAAQ,OAAQ,IAC/C,OACE,YAAC,WAAD,KACE,YAAC,IAAD,CACEC,KAAK,UACLtB,MAAOzB,EACP6C,cAAeA,EACfP,YAAaA,EACbE,QAASA,EACTQ,MAAOP,EACPQ,KAAMN,EACNJ,SAAUA,GAAY,CAAC,IACvBG,KAAMA,QAMfR","file":"component---src-pages-projects-mdx-7878f67eb9fffe8e1f81.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/akshay/Documents/code/Projects/akshay090.github.io/node_modules/@pauliescanlon/gatsby-theme-terminal/src/layouts/PageLayout.js\";\nimport { ProjectCard } from \"../components/ProjectCard\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst SourceList = makeShortcode(\"SourceList\");\nconst Flex = makeShortcode(\"Flex\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1>{`Projects`}</h1>\n    <h3>{`Things that I have made`}</h3>\n    <SourceList filter=\"projects\" mdxType=\"SourceList\">\n  {projects => <Flex sx={{\n        flexWrap: \"wrap\",\n        ml: theme => `-${theme.space[2]}px`,\n        mr: theme => `-${theme.space[2]}px`\n      }} mdxType=\"Flex\">\n      {projects.map((edge, index) => {\n          const {\n            frontmatter: {\n              title,\n              misc,\n              date,\n              featuredImageUrl\n            },\n            fields: {\n              slug\n            }\n          } = edge.node;\n          return <ProjectCard index={index} cardImage={featuredImageUrl} title={title} misc={misc} date={date} slug={slug} mdxType=\"ProjectCard\" />;\n        })}\n    </Flex>}\n    </SourceList>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport { Fragment } from 'react'\nimport { jsx } from 'theme-ui'\nimport { Location } from '@reach/router'\nimport { ContextProvider } from '../context'\n\nimport { Seo } from '../components/Seo'\nimport { Main } from '../components/Main'\n\nimport { useConfig } from '../data'\n\nconst PageLayout = ({ children }) => {\n  const {\n    site: {\n      siteMetadata: { name, description, keywords, siteUrl, siteImage, lang },\n    },\n  } = useConfig()\n\n  return (\n    <ContextProvider>\n      <Main>\n        <Location>\n          {({ location }) => {\n            const { pathname } = location\n            const titleTemplate = pathname.replace(/\\//gm, '')\n            return (\n              <Fragment>\n                <Seo\n                  type=\"website\"\n                  title={name}\n                  titleTemplate={titleTemplate}\n                  description={description}\n                  siteUrl={siteUrl}\n                  image={siteImage}\n                  path={pathname}\n                  keywords={keywords || ['']}\n                  lang={lang}\n                />\n              </Fragment>\n            )\n          }}\n        </Location>\n        {children}\n      </Main>\n    </ContextProvider>\n  )\n}\n\nexport default PageLayout\n"],"sourceRoot":""}