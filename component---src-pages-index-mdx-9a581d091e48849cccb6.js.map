{"version":3,"sources":["webpack:///./node_modules/@pauliescanlon/gatsby-theme-terminal/src/layouts/PageLayout.js","webpack:///./src/pages/index.mdx"],"names":["PageLayout","children","useConfig","site","siteMetadata","name","description","keywords","siteUrl","siteImage","lang","pathname","location","titleTemplate","replace","type","title","image","path","_frontmatter","makeShortcode","props","console","warn","Alert","Divider","Button","Link","Flex","Box","Text","SourceTags","Badge","SourceList","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","variant","parentName","as","href","sx","mr","target","flexWrap","width","mb","pr","tags","sort","a","b","percent","map","tag","index","count","key","color","mix","length","borderColor","filter","projects","ml","theme","space","splice","edge","node","frontmatter","misc","date","featuredImageUrl","slug","fields","cardImage","justifyContent","GatsbyLink","role","aria-label","posts","isPrivate","reduce","post","pinned","dateModified","excerpt","timeToRead","isMDXComponent"],"mappings":"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","file":"component---src-pages-index-mdx-9a581d091e48849cccb6.js","sourcesContent":["/** @jsx jsx */\nimport { Fragment } from 'react'\nimport { jsx } from 'theme-ui'\nimport { Location } from '@reach/router'\nimport { ContextProvider } from '../context'\n\nimport { Seo } from '../components/Seo'\nimport { Main } from '../components/Main'\n\nimport { useConfig } from '../data'\n\nconst PageLayout = ({ children }) => {\n  const {\n    site: {\n      siteMetadata: { name, description, keywords, siteUrl, siteImage, lang },\n    },\n  } = useConfig()\n\n  return (\n    <ContextProvider>\n      <Main>\n        <Location>\n          {({ location }) => {\n            const { pathname } = location\n            const titleTemplate = pathname.replace(/\\//gm, '')\n            return (\n              <Fragment>\n                <Seo\n                  type=\"website\"\n                  title={name}\n                  titleTemplate={titleTemplate}\n                  description={description}\n                  siteUrl={siteUrl}\n                  image={siteImage}\n                  path={pathname}\n                  keywords={keywords || ['']}\n                  lang={lang}\n                />\n              </Fragment>\n            )\n          }}\n        </Location>\n        {children}\n      </Main>\n    </ContextProvider>\n  )\n}\n\nexport default PageLayout\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/akshay/Documents/code/Projects/akshay090.github.io/node_modules/@pauliescanlon/gatsby-theme-terminal/src/layouts/PageLayout.js\";\nimport { Link as GatsbyLink } from \"gatsby\";\nimport { mix } from \"@theme-ui/color\";\nimport { PostCard } from \"../components/PostCard\";\nimport { ProjectCard } from \"../components/ProjectCard\";\nimport { format } from \"date-fns\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Alert = makeShortcode(\"Alert\");\nconst Divider = makeShortcode(\"Divider\");\nconst Button = makeShortcode(\"Button\");\nconst Link = makeShortcode(\"Link\");\nconst Flex = makeShortcode(\"Flex\");\nconst Box = makeShortcode(\"Box\");\nconst Text = makeShortcode(\"Text\");\nconst SourceTags = makeShortcode(\"SourceTags\");\nconst Badge = makeShortcode(\"Badge\");\nconst SourceList = makeShortcode(\"SourceList\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Alert variant=\"success\" mdxType=\"Alert\">I'm currently looking for new opportunities 😊</Alert>\n    <Divider mdxType=\"Divider\" />\n    <h1><a parentName=\"h1\" {...{\n        \"href\": \"#akshay-ashok\"\n      }}>{`akshay-ashok`}</a></h1>\n    <p>{`Full Stack Developer based in India`}</p>\n    <p>{`Microsoft Learn Student Ambassador, React, NodeJS, Express, MongoDB, PostgreSQL, Python, Django, Apollo/GraphQL.`}</p>\n    <Button as=\"a\" variant=\"success\" href=\"/resume\" sx={{\n      mr: 2\n    }} mdxType=\"Button\">\n  View CV/Resume\n    </Button>\n    <Link href=\"/akshay-cv.pdf\" target=\"_blank\" title=\"View CV\" mdxType=\"Link\">\n  .pdf version\n    </Link>\n    <Divider mdxType=\"Divider\" />\n    <Divider mdxType=\"Divider\" />\n    <h2><a parentName=\"h2\" {...{\n        \"href\": \"#intro\"\n      }}>{`intro`}</a></h2>\n    <p>{`hey there! 👋 I'm Akshay, a self-taught full stack developer based in India. I like to build and develop\ncool products. I mainly work with ReactJS for frontend and NodeJS or Python depending on the task.`}</p>\n    <Divider mdxType=\"Divider\" />\n    <Flex sx={{\n      flexWrap: 'wrap'\n    }} mdxType=\"Flex\">\n      <Box sx={{\n        width: [\"100%\", \"100%\", \"55%\"],\n        mb: 3,\n        pr: [0, 0, 4]\n      }} mdxType=\"Box\">\n        <h2>{`contact`}</h2>\n        <Text mdxType=\"Text\">Email</Text>\n        <Link href=\"mailto:howdy.aks@gmail.com\" target=\"_blank\" variant=\"styles.a\" mdxType=\"Link\">\n  howdy.aks@gmail.com\n        </Link>\n        <Divider mdxType=\"Divider\" />\n        <Text mdxType=\"Text\">Twitter</Text>\n        <Link href=\"https://twitter.com/aks2899\" target=\"_blank\" variant=\"styles.a\" mdxType=\"Link\">\n  https://twitter.com/aks2899\n        </Link>\n        <Divider mdxType=\"Divider\" />\n        <Text mdxType=\"Text\">GitHub</Text>\n        <Link href=\"https://github.com/Akshay090\" target=\"_blank\" variant=\"styles.a\" mdxType=\"Link\">\n  https://github.com/Akshay090\n        </Link>\n        <Divider mdxType=\"Divider\" />\n        <Divider mdxType=\"Divider\" />\n      </Box>\n      <Box sx={{\n        width: [\"100%\", \"100%\", \"45%\"],\n        mb: 3\n      }} mdxType=\"Box\">\n        <h2>{`blog topics`}</h2>\n        <Divider mdxType=\"Divider\" />\n        <SourceTags mdxType=\"SourceTags\">\n  {tags => <Box mdxType=\"Box\">\n      {tags.sort((a, b) => b.percent - a.percent).map((tag, index) => {\n              const {\n                name,\n                count,\n                percent\n              } = tag;\n              return <Badge key={index} variant=\"primary\" sx={{\n                mr: 2,\n                mb: 2,\n                color: mix(\"secondary\", \"primary\", `${index / tags.length}`),\n                borderColor: mix(\"secondary\", \"primary\", `${index / tags.length}`)\n              }} mdxType=\"Badge\">\n              {name}\n            </Badge>;\n            })}\n    </Box>}\n        </SourceTags>\n        <Divider mdxType=\"Divider\" />\n        <Divider mdxType=\"Divider\" />\n      </Box>\n    </Flex>\n    <h2>{`projects`}</h2>\n    <SourceList filter=\"projects\" mdxType=\"SourceList\">\n  {projects => <Flex sx={{\n        flexWrap: \"wrap\",\n        ml: theme => `-${theme.space[2]}px`,\n        mr: theme => `-${theme.space[2]}px`\n      }} mdxType=\"Flex\">\n      {projects.splice(0, 6).map((edge, index) => {\n          const {\n            frontmatter: {\n              title,\n              misc,\n              date,\n              featuredImageUrl\n            },\n            fields: {\n              slug\n            }\n          } = edge.node;\n          return <ProjectCard key={index} index={index} cardImage={featuredImageUrl} title={title} misc={misc} date={date} slug={slug} mdxType=\"ProjectCard\" />;\n        })}\n    </Flex>}\n    </SourceList>\n    <Divider mdxType=\"Divider\" />\n    <Flex sx={{\n      justifyContent: \"center\"\n    }} mdxType=\"Flex\">\n  <Box mdxType=\"Box\">\n    <Button as={GatsbyLink} variant=\"ghost\" href=\"/projects\" mdxType=\"Button\">\n      All Projects{\" \"}\n      <Box as=\"span\" role=\"img\" aria-label=\"pencil\" mdxType=\"Box\">\n        🛠\n      </Box>\n    </Button>\n  </Box>\n    </Flex>\n    <Divider mdxType=\"Divider\" />\n    <h2>{`latest posts`}</h2>\n    <Divider mdxType=\"Divider\" />\n    <SourceList filter=\"posts\" mdxType=\"SourceList\">\n  {posts => <Flex sx={{\n        flexWrap: \"wrap\",\n        ml: theme => `-${theme.space[2]}px`,\n        mr: theme => `-${theme.space[2]}px`\n      }} mdxType=\"Flex\">\n      {posts.filter(edge => !edge.node.frontmatter.isPrivate).reduce((posts, post) => {\n          return post.node.frontmatter.pinned ? [post, ...posts] : [...posts, post];\n        }, []).splice(0, 4).map((edge, index) => {\n          const {\n            frontmatter: {\n              title,\n              featuredImageUrl,\n              tags,\n              date,\n              dateModified,\n              pinned\n            },\n            excerpt,\n            timeToRead,\n            fields: {\n              slug\n            }\n          } = edge.node;\n          return <PostCard key={index} title={title} cardImage={index === 0 ? featuredImageUrl : null} tags={tags} date={date} dateModified={dateModified} excerpt={excerpt} slug={slug} pinned={pinned} timeToRead={timeToRead} mdxType=\"PostCard\" />;\n        })}\n    </Flex>}\n    </SourceList>\n    <Divider mdxType=\"Divider\" />\n    <Flex sx={{\n      justifyContent: \"center\"\n    }} mdxType=\"Flex\">\n  <Box mdxType=\"Box\">\n    <Button as={GatsbyLink} variant=\"ghost\" href=\"/posts\" mdxType=\"Button\">\n      More posts{\" \"}\n      <Box as=\"span\" role=\"img\" aria-label=\"pencil\" mdxType=\"Box\">\n        ✏️\n      </Box>\n    </Button>\n  </Box>\n    </Flex>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}