{"version":3,"sources":["webpack:///./node_modules/@pauliescanlon/gatsby-theme-terminal/src/layouts/PageLayout.js","webpack:///./src/pages/posts.mdx"],"names":["PageLayout","children","useConfig","site","siteMetadata","name","description","keywords","siteUrl","siteImage","lang","pathname","location","titleTemplate","replace","type","title","image","path","_frontmatter","makeShortcode","props","console","warn","SourceList","Flex","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","filter","posts","sx","flexWrap","ml","theme","space","mr","edge","node","frontmatter","isPrivate","reduce","post","pinned","map","index","featuredImageUrl","tags","date","dateModified","excerpt","timeToRead","slug","fields","key","cardImage","isMDXComponent"],"mappings":"2FAAA,wFAgDeA,IArCI,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAK/BC,cAHFC,KACEC,aAAgBC,EAHe,EAGfA,KAAMC,EAHS,EAGTA,YAAaC,EAHJ,EAGIA,SAAUC,EAHd,EAGcA,QAASC,EAHvB,EAGuBA,UAAWC,EAHlC,EAGkCA,KAIrE,OACE,YAAC,IAAD,KACE,YAAC,IAAD,KACE,YAAC,WAAD,MACG,YAAmB,IACVC,EADS,EAAfC,SACMD,SACFE,EAAgBF,EAASG,QAAQ,OAAQ,IAC/C,OACE,YAAC,WAAD,KACE,YAAC,IAAD,CACEC,KAAK,UACLC,MAAOX,EACPQ,cAAeA,EACfP,YAAaA,EACbE,QAASA,EACTS,MAAOR,EACPS,KAAMP,EACNJ,SAAUA,GAAY,CAAC,IACvBG,KAAMA,QAMfT,M,sNClCIkB,EAAe,GAEtBC,EAAgB,SAAAf,GAAI,OAAI,SAA6BgB,GAEzD,OADAC,QAAQC,KAAK,aAAelB,EAAO,2EAC5B,oBAASgB,KAGZG,EAAaJ,EAAc,cAC3BK,EAAOL,EAAc,QACrBM,EAAc,CAClBP,gBAEIQ,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGT,EACF,8BACD,OAAO,cAACM,EAAD,iBAAeD,EAAiBL,EAAhC,CAAuCS,WAAYA,EAAYC,QAAQ,cAI5E,iCACA,cAACP,EAAD,CAAYQ,OAAO,QAAQD,QAAQ,eACpC,SAAAE,GACK,OAAO,cAACR,EAAD,CAAMS,GAAI,CACfC,SAAU,OACVC,GAAI,SAAAC,GAAK,UAAQA,EAAMC,MAAM,GAApB,MACTC,GAAI,SAAAF,GAAK,UAAQA,EAAMC,MAAM,GAApB,OACRP,QAAQ,QACVE,EAAMD,QAAO,SAAAQ,GAAI,OAAKA,EAAKC,KAAKC,YAAYC,aAAWC,QAAO,SAACX,EAAOY,GACnE,OAAOA,EAAKJ,KAAKC,YAAYI,OAAtB,CAAgCD,GAAhC,mBAAyCZ,IAAzC,sBAAsDA,GAAtD,CAA6DY,MACnE,IAAIE,KAAI,SAACP,EAAMQ,GAAU,MAetBR,EAAKC,KAfiB,IAExBC,YACE1B,EAHsB,EAGtBA,MACAiC,EAJsB,EAItBA,iBACAC,EALsB,EAKtBA,KACAC,EANsB,EAMtBA,KACAC,EAPsB,EAOtBA,aACAN,EARsB,EAQtBA,OAEFO,EAVwB,EAUxBA,QACAC,EAXwB,EAWxBA,WAEEC,EAbsB,EAYxBC,OACED,KAGJ,OAAO,cAAC,IAAD,CAAUE,IAAKT,EAAOhC,MAAOA,EAAO0C,UAAqB,IAAVV,EAAcC,EAAmB,KAAMC,KAAMA,EAAMC,KAAMA,EAAMC,aAAcA,EAAcC,QAASA,EAASE,KAAMA,EAAMT,OAAQA,EAAQQ,WAAYA,EAAYvB,QAAQ,qBAS3OF,EAAW8B,gBAAiB","file":"component---src-pages-posts-mdx-f6dfa5e30930e8cdcc77.js","sourcesContent":["/** @jsx jsx */\nimport { Fragment } from 'react'\nimport { jsx } from 'theme-ui'\nimport { Location } from '@reach/router'\nimport { ContextProvider } from '../context'\n\nimport { Seo } from '../components/Seo'\nimport { Main } from '../components/Main'\n\nimport { useConfig } from '../data'\n\nconst PageLayout = ({ children }) => {\n  const {\n    site: {\n      siteMetadata: { name, description, keywords, siteUrl, siteImage, lang },\n    },\n  } = useConfig()\n\n  return (\n    <ContextProvider>\n      <Main>\n        <Location>\n          {({ location }) => {\n            const { pathname } = location\n            const titleTemplate = pathname.replace(/\\//gm, '')\n            return (\n              <Fragment>\n                <Seo\n                  type=\"website\"\n                  title={name}\n                  titleTemplate={titleTemplate}\n                  description={description}\n                  siteUrl={siteUrl}\n                  image={siteImage}\n                  path={pathname}\n                  keywords={keywords || ['']}\n                  lang={lang}\n                />\n              </Fragment>\n            )\n          }}\n        </Location>\n        {children}\n      </Main>\n    </ContextProvider>\n  )\n}\n\nexport default PageLayout\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/akshay/Documents/code/Projects/akshay090.github.io/node_modules/@pauliescanlon/gatsby-theme-terminal/src/layouts/PageLayout.js\";\nimport { Link as GatsbyLink } from \"gatsby\";\nimport { PostCard } from \"../components/PostCard\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst SourceList = makeShortcode(\"SourceList\");\nconst Flex = makeShortcode(\"Flex\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1>{`posts`}</h1>\n    <SourceList filter=\"posts\" mdxType=\"SourceList\">\n  {posts => {\n        return <Flex sx={{\n          flexWrap: \"wrap\",\n          ml: theme => `-${theme.space[2]}px`,\n          mr: theme => `-${theme.space[2]}px`\n        }} mdxType=\"Flex\">\n        {posts.filter(edge => !edge.node.frontmatter.isPrivate).reduce((posts, post) => {\n            return post.node.frontmatter.pinned ? [post, ...posts] : [...posts, post];\n          }, []).map((edge, index) => {\n            const {\n              frontmatter: {\n                title,\n                featuredImageUrl,\n                tags,\n                date,\n                dateModified,\n                pinned\n              },\n              excerpt,\n              timeToRead,\n              fields: {\n                slug\n              }\n            } = edge.node;\n            return <PostCard key={index} title={title} cardImage={index === 0 ? featuredImageUrl : null} tags={tags} date={date} dateModified={dateModified} excerpt={excerpt} slug={slug} pinned={pinned} timeToRead={timeToRead} mdxType=\"PostCard\" />;\n          })}\n      </Flex>;\n      }}\n    </SourceList>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}