{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack:///./node_modules/@pauliescanlon/gatsby-theme-terminal/src/components/SourceArticle/SourceArticle.js","webpack:///./node_modules/@pauliescanlon/gatsby-theme-terminal/src/layouts/SourceLayout.js","webpack:///./node_modules/@babel/runtime/helpers/construct.js"],"names":["MDXRenderer","require","module","exports","TypeError","iter","Symbol","iterator","Object","Array","from","arrayLikeToArray","arr","isArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","_setPrototypeOf","o","p","setPrototypeOf","__proto__","len","length","i","arr2","React","useMDXComponents","mdx","useMDXScope","scope","components","children","props","mdxComponents","mdxScope","End","fullScope","keys","values","key","fn","minLen","n","prototype","toString","call","slice","constructor","name","test","Reflect","construct","sham","Proxy","Date","e","formatDate","date","format","SourceArticle","title","tags","dateModified","author","isPrivate","featuredImage","featuredImageUrl","embedded","body","timeToRead","wordCount","Main","variant","sx","mb","childImageSharp","fluid","alt","originalName","src","as","flexWrap","width","color","textAlign","words","map","tag","index","mr","mix","borderColor","singleMdx","SourceLayout","data","excerpt","frontmatter","useConfig","site","siteMetadata","siteUrl","siteImage","lang","embeddedImages","embeddedImageUrls","seoImage","filter","reduce","images","image","url","pathname","location","Seo","type","titleTemplate","description","path","keywords","isNativeReflectConstruct","_construct","Parent","args","Class","a","push","apply","instance","Function","bind","arguments"],"mappings":"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","file":"component---node-modules-pauliescanlon-gatsby-theme-terminal-src-layouts-source-layout-js-c14e45e3663cdd635db7.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { MDXRenderer } from 'gatsby-plugin-mdx'\nimport { MDXProvider } from '@mdx-js/react'\nimport {\n  Heading,\n  Badge,\n  Text,\n  Flex,\n  Box,\n  Divider,\n  Image,\n  Alert,\n} from '@theme-ui/components'\nimport { mix } from '@theme-ui/color'\nimport { format } from 'date-fns'\nimport Img from 'gatsby-image'\n\nimport { Main } from '../Main'\n\nconst formatDate = date => format(new Date(date), 'd-MMM-u')\n\nexport const SourceArticle = ({\n  title,\n  tags,\n  date,\n  dateModified,\n  author,\n  isPrivate,\n  featuredImage,\n  featuredImageUrl,\n  embedded,\n  body,\n  timeToRead,\n  wordCount,\n}) => {\n  return (\n    <Main>\n      {isPrivate && (\n        <Fragment>\n          <Alert variant=\"error\">This is a private post</Alert>\n          <Divider />\n        </Fragment>\n      )}\n\n      <Box sx={{ mb: 4 }}>\n        {featuredImage && featuredImage.childImageSharp && (\n          <Img\n            fluid={featuredImage.childImageSharp.fluid}\n            alt={featuredImage.childImageSharp.fluid.originalName}\n          />\n        )}\n        {featuredImageUrl && <Image src={featuredImageUrl} />}\n      </Box>\n      <Heading as=\"h1\" variant=\"styles.h1\" sx={{ mb: 4 }}>\n        {title}\n      </Heading>\n      <Flex sx={{ flexWrap: 'wrap' }}>\n        <Box\n          sx={{\n            width: ['100%', '50%'],\n          }}\n        >\n          {date && (\n            <Text sx={{ color: 'muted' }}>\n              Date published: {formatDate(date)}\n            </Text>\n          )}\n        </Box>\n        <Box\n          sx={{\n            width: ['100%', '50%'],\n          }}\n        >\n          {dateModified && (\n            <Text\n              sx={{\n                color: 'muted',\n                textAlign: ['left', 'right'],\n              }}\n            >\n              Date modified: {formatDate(dateModified)}\n            </Text>\n          )}\n        </Box>\n      </Flex>\n\n      <Flex sx={{ flexWrap: 'wrap' }}>\n        <Box\n          sx={{\n            width: ['100%', '50%'],\n          }}\n        >\n          <Text\n            sx={{ color: 'muted' }}\n          >{`${timeToRead} min read / ${wordCount.words} words`}</Text>\n        </Box>\n        {author && (\n          <Box\n            sx={{\n              width: ['100%', '50%'],\n            }}\n          >\n            <Text sx={{ color: 'muted', textAlign: ['left', 'right'] }}>\n              Author: {author}\n            </Text>\n          </Box>\n        )}\n      </Flex>\n\n      <Divider />\n\n      {tags &&\n        tags.map((tag, index) => (\n          <Badge\n            key={index}\n            variant=\"primary\"\n            sx={{\n              mb: 2,\n              mr: 2,\n              color: mix('muted', 'primary', `${index / tags.length}`),\n              borderColor: mix('muted', 'primary', `${index / tags.length}`),\n            }}\n          >\n            {tag}\n          </Badge>\n        ))}\n\n      <Divider />\n      <MDXProvider>\n        <MDXRenderer embedded={embedded}>{body}</MDXRenderer>\n      </MDXProvider>\n    </Main>\n  )\n}\n\nSourceArticle.propTypes = {\n  /** Title frommatter\" */\n  title: PropTypes.string,\n  /** Tags from frontmatter */\n  tags: PropTypes.arrayOf(PropTypes.string),\n  /** Date from frontmatter */\n  date: PropTypes.string,\n  /** DateModified from frontmatter */\n  dateModified: PropTypes.string,\n  /** Author from frontmatter */\n  author: PropTypes.string,\n  /** isPrivate from frontMatter */\n  isPrivate: PropTypes.bool,\n  /** FeaturedImage from frontmatter */\n  featuredImage: PropTypes.any,\n  /** FeaturedImageUrl from frontmatter */\n  featuredImageUrl: PropTypes.string,\n  /** embeddedImage array from SourceLayout */\n  embedded: PropTypes.any,\n  /** body from SourceLayout */\n  body: PropTypes.any,\n  /** timeToRead from SourceLayout */\n  timeToRead: PropTypes.number,\n  /** wordCount from SourceLayout */\n  wordCount: PropTypes.shape({\n    words: PropTypes.number,\n  }),\n}\n","import React, { Fragment } from 'react'\nimport { Location } from '@reach/router'\nimport { graphql } from 'gatsby'\n\nimport { ContextProvider } from '../context'\n\nimport { Seo } from '../components/Seo'\nimport { SourceArticle } from '../components/SourceArticle'\n\nimport { useConfig } from '../data'\n\nconst IMAGE_KEY = 'image'\n\nconst SourceLayout = ({\n  data: {\n    mdx: { body, excerpt, frontmatter, timeToRead, wordCount },\n  },\n}) => {\n  const {\n    site: {\n      siteMetadata: { name, siteUrl, siteImage, lang },\n    },\n  } = useConfig()\n\n  const {\n    title,\n    tags,\n    date,\n    dateModified,\n    author,\n    isPrivate,\n    featuredImage,\n    featuredImageUrl,\n    embeddedImages,\n    embeddedImageUrls,\n  } = frontmatter\n\n  const seoImage =\n    (featuredImage &&\n      `${siteUrl}/${featuredImage.childImageSharp.fluid.src}`) ||\n    featuredImageUrl ||\n    `${siteUrl}/${siteImage}`\n\n  const combinedEmbedded = [\n    ...(embeddedImages || []),\n    ...(embeddedImageUrls || []),\n  ].filter(n => n)\n\n  const embedded = combinedEmbedded.reduce((images, image, index) => {\n    images[`${IMAGE_KEY}${index + 1}`] = images[`${IMAGE_KEY}${index + 1}`] || {\n      ...(image.childImageSharp || { url: image }),\n    }\n    return images\n  }, [])\n\n  return (\n    <ContextProvider>\n      <Location>\n        {({ location }) => {\n          const { pathname } = location\n          return (\n            <Fragment>\n              <Seo\n                type=\"article\"\n                title={name}\n                titleTemplate={title}\n                description={excerpt}\n                siteUrl={siteUrl}\n                image={seoImage}\n                path={pathname}\n                keywords={tags || ['']}\n                lang={lang}\n              />\n              <SourceArticle\n                title={title}\n                tags={tags}\n                date={date}\n                dateModified={dateModified}\n                author={author}\n                isPrivate={isPrivate}\n                featuredImage={featuredImage}\n                featuredImageUrl={featuredImageUrl}\n                embedded={embedded}\n                body={body}\n                timeToRead={timeToRead}\n                wordCount={wordCount}\n              />\n            </Fragment>\n          )\n        }}\n      </Location>\n    </ContextProvider>\n  )\n}\n\n// This query is a duplicate of useAllMdx so if you update this one update that one too! in data/useAllMdx\n// test id: c147b696-2ac9-58b3-a3e6-17d8402289e0\n// draft id: c2a66bb2-6fc4-5b03-94f1-e31abea07a59\n\nexport const singleMdx = graphql`\n  query singleMdx($id: String) {\n    mdx(id: { eq: $id }) {\n      id\n      body\n      excerpt\n      timeToRead\n      wordCount {\n        words\n      }\n      frontmatter {\n        title\n        tags\n        date\n        dateModified\n        author\n        status\n        isPrivate\n        url\n        misc\n        pinned\n        featuredImage {\n          childImageSharp {\n            original {\n              width\n              height\n              src\n            }\n            fluid(maxWidth: 1200, quality: 90) {\n              ...GatsbyImageSharpFluid\n            }\n            fixed(quality: 90) {\n              ...GatsbyImageSharpFixed\n            }\n            id\n          }\n        }\n        featuredImageUrl\n        embeddedImages {\n          childImageSharp {\n            original {\n              width\n              height\n              src\n            }\n            fluid(maxWidth: 1200, quality: 90) {\n              ...GatsbyImageSharpFluid\n            }\n            fixed(quality: 90) {\n              ...GatsbyImageSharpFixed\n            }\n            id\n          }\n        }\n        embeddedImageUrls\n      }\n      fields {\n        slug\n        owner\n        parent\n      }\n    }\n  }\n`\n\nexport default SourceLayout\n","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;"],"sourceRoot":""}